<?php

/**
 * @file
 * Provides collage logic.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Url;
use Drupal\Core\Link;


/**
 * Prepares variables for `field.html.twig`.
 */
function collage_preprocess_field(&$variables) {
  $element = $variables['element'];

  // Enables the communication with a brick parent.
  if ($element['#formatter'] == 'bricks_nested') {
    foreach (Element::children($element) as $brick_delta) {
      $element[$brick_delta]['#media']->__set('collage_parent_entity', $variables['element']['#object']);
    }
  }
}

/**
 * Implements hook_field_widget_WIDGET_TYPE_form_alter().
 */
function collage_field_widget_bricks_tree_inline_form_alter(&$element, FormStateInterface $form_state, $context) {
  $collage_started = FALSE;
  $current_collage_id = NULL;
  $current_collage_depth = NULL;

  $build_info = $form_state->getBuildInfo();
  $callback_object = $build_info['callback_object'];
  $entity = $callback_object->getEntity();
  $field_name = $context['items']->getFieldDefinition()->getName();

  foreach (Element::children($element['entities']) as $delta) {
    $widget_row = &$element['entities'][$delta];

//    hide($widget_row['options']['view_mode']);
//    hide($widget_row['options']['css_class']);

    if ($widget_row['depth']['#default_value'] < $current_collage_depth) {
      $collage_started = FALSE;
      $current_collage_depth = NULL;
      $current_collage_id = NULL;
    }

    if ($collage_started == TRUE) {
      $widget_row['options']['collage'] = [
        '#type' => 'textarea',
        '#attributes' => [
          'class' => ['collage-settings'],
          'data-entity-type' => $entity->getEntityTypeId(),
          'data-entity-id' => $entity->id(),
          'data-field-name' => $field_name,
          'data-collage-id' => $current_collage_id,
          'data-collage-item-id' => $widget_row['#entity']->id(),
        ],
        '#default_value' => isset($context['items'][$delta]->options['collage']) ? $context['items'][$delta]->options['collage'] : NULL,
      ];
    }

    if ($widget_row['#entity']->bundle() == 'collage') {
      $collage_started = TRUE;
      $current_collage_id = $widget_row['#entity']->id();
      $current_collage_depth = $widget_row['depth']['#default_value'];

      $link_url = Url::fromRoute('collage.modal', [
        'entity_type' => $entity->getEntityTypeId(),
        'entity_id' => $entity->id(),
        'field_name' => $field_name,
        'collage_id' => $current_collage_id,
      ]);

      $link_url->setOptions([
        'attributes' => [
          'class' => ['use-ajax', 'button', 'button--small'],
          'data-dialog-type' => 'modal',
        ]
      ]);

      $widget_row['options']['collage'] = [
        '#type' => 'container',
        '#attached' => [
          'library' => ['collage/widget']
        ],
        'link' => [
          '#type' => 'markup',
          '#markup' => Link::fromTextAndUrl(t('Edit collage'), $link_url)->toString(),
          '#attached' => ['library' => ['core/drupal.dialog.ajax']]
        ]
      ];
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function collage_preprocess_html(&$variables) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  if ($route_name == 'collage.entity') {
    $attached = $variables['page']['#attached'];
    $variables['page'] = $variables['page']['content'];
    $variables['page']['#attached'] = $attached;
    $variables['page']['#attached']['library'][] = 'collage/iframe';
  }
}